{
  "swagger" : "2.0",
  "info" : {
    "version" : "1.1",
    "title" : "Xenosite TING",
    "description" : "Xenosite TING",
    "contact" : {
      "name" : "Luka Stosic",
      "email" : "lstosic@infodation.nl"
    },
    "license" : {
      "name" : "InfoDation"
    }
  },
  "host" : "10.4.1.204:8088",
  "basePath" : "/api/v1",
  "produces" : [ "application/json" ],
  "paths" : {
    "/endpoints/{number}/shortcodes" : {
      "get" : {
        "summary" : "List all shortcodes associated by endpoint",
        "description" : "List all shortcodes associated by endpoint",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "shortcodes" ],
        "responses" : {
          "200" : {
            "description" : "Shortcode information",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ShortCode"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "shortcodes" ],
        "summary" : "Delete all shortcodes on endpoint",
        "description" : "Delete all shortcode definitions for given endpoint",
        "operationId" : "deleteShortcodesForEndpoint",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shortcodes successful delete response"
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Post new shortcode on current endpoint",
        "description" : "Add new shortcode on current endpoint",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "shortcode",
          "in" : "body",
          "description" : "Shortcode to be added to TING",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsertShortCode"
          }
        } ],
        "tags" : [ "shortcodes" ],
        "responses" : {
          "200" : {
            "description" : "Added short code",
            "schema" : {
              "$ref" : "#/definitions/ShortCode"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints/{number}/shortcodes/{code}" : {
      "get" : {
        "summary" : "Single shortcode by callernumber and shortcode",
        "description" : "Getting single shortcode by its callernumber and shortcode",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Shortcode of shortcode definition to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "shortcodes" ],
        "responses" : {
          "200" : {
            "description" : "Shortcode information",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ShortCode"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "shortcodes" ],
        "summary" : "Update single short code definition",
        "description" : "Updates single shortcode on endpoint. Only item that is allowed to be updated is destination number.",
        "operationId" : "updateShortcode",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Shortcode part of shortcode definition to fetch",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "shortcode",
          "in" : "body",
          "description" : "Shortcode to update on TING",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsertShortCode"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "shortcode updated response",
            "schema" : {
              "$ref" : "#/definitions/ShortCode"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "shortcodes" ],
        "summary" : "Delete single shortcode",
        "description" : "Delete single shortcode",
        "operationId" : "deleteShortcode",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "code",
          "in" : "path",
          "description" : "Shortcode part of shortcode definition to fetch",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "shortcode successful delete response"
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cug" : {
      "get" : {
        "summary" : "List of all Closed user groups for given reseller",
        "description" : "Listing all user groups for reseller and contract combination",
        "tags" : [ "CUG" ],
        "parameters" : [ {
          "name" : "reseller",
          "in" : "query",
          "description" : "Reseller username from XOMS system",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "contract_id",
          "in" : "query",
          "description" : "Contract ID from XOMS system",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of all Closed User Groups",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CUG"
              }
            }
          },
          "404" : {
            "description" : "No CUG could be found for this reseller & contract ID combination"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      },
      "post" : {
        "summary" : "Adding new CUG",
        "description" : "Adding new CUG for reseller and contract_id combination",
        "tags" : [ "CUG" ],
        "parameters" : [ {
          "name" : "cug_insert",
          "in" : "body",
          "description" : "CUG details to be added",
          "required" : true,
          "type" : {
            "$ref" : "#definitions/CUG"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of inserted CUG",
            "schema" : {
              "$ref" : "#definitions/CUG"
            }
          }
        }
      }
    },
    "/shortcodes" : {
      "get" : {
        "summary" : "List of shortcodes",
        "description" : "Getting list of all shortcodes from system",
        "tags" : [ "shortcodes" ],
        "responses" : {
          "200" : {
            "description" : "List of shortcodes",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ShortCode"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Post new shortcode",
        "description" : "Add new shortcode",
        "parameters" : [ {
          "name" : "shortcode",
          "in" : "body",
          "description" : "Shortcode to be added to TING",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsertShortCode"
          }
        } ],
        "tags" : [ "shortcodes" ],
        "responses" : {
          "200" : {
            "description" : "Added short code",
            "schema" : {
              "$ref" : "#/definitions/ShortCode"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/internal/voicemessages" : {
      "get" : {
        "summary" : "Get list of voicemessages from system.",
        "tags" : [ "internal functions" ],
        "description" : "Get list of voicemessages from system. Default will return latest 100 voicemessages.",
        "parameters" : [ {
          "name" : "sent",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "description" : "Filter out sent or non sent email notifications.<br/>- sent=0 will give list of voicemessages that are not sent via email<br/>- sent=1 will give list of voicemessages that are sent via email"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of voicemessages",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Voicemessage"
              }
            }
          },
          "404" : {
            "description" : "There are no voicemessages"
          }
        }
      }
    },
    "/internal/voicemessages/{id}" : {
      "get" : {
        "summary" : "Get audio content of single voicemessage.",
        "tags" : [ "internal functions" ],
        "description" : "Get audio content of single voicemessage<br/>TODO: for debate should we send response as file, or as base64 encoded string content of database blob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "ID of voicemessage"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of voicemessages",
            "schema" : {
              "$ref" : "#/definitions/VoiceMessageAudio"
            }
          },
          "404" : {
            "description" : "There is no voicemessage with given ID"
          },
          "500" : {
            "description" : "Error while processing"
          }
        }
      },
      "put" : {
        "summary" : "Update voicemessage status",
        "tags" : [ "internal functions" ],
        "description" : "After email containg audio is sent to end user, send update via this method to adjust email status",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "ID of voicemessage"
        }, {
          "name" : "VoicemessageUpdate",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VoiceMessageUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Voicemessage sent status updated"
          },
          "404" : {
            "description" : "There is no voicemessage with given ID"
          },
          "500" : {
            "description" : "Error while processing"
          }
        }
      }
    },
    "/endpoints/{number}/voicemail" : {
      "get" : {
        "summary" : "Get voicemail configuration",
        "description" : "Get voicemail configuration details on given endpoint",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "voicemail" ],
        "responses" : {
          "200" : {
            "description" : "Voicemail config information",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Voicemail"
              }
            }
          },
          "404" : {
            "description" : "There is no voicemail information"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "put" : {
        "summary" : "Update voicemail configuration on given endpoint",
        "description" : "Update voicemail configuration on given endpoint",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "voicemail",
          "in" : "body",
          "description" : "Voicemail configuration (PIN code) for given endpoint",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsertVoicemail"
          }
        } ],
        "tags" : [ "voicemail" ],
        "responses" : {
          "200" : {
            "description" : "Voicemail config information",
            "schema" : {
              "$ref" : "#/definitions/Voicemail"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints/{number}/voicemessages" : {
      "get" : {
        "summary" : "Get voicemessages on given endpoint",
        "description" : "Get voicemessages on given endpoint",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "voicemail" ],
        "responses" : {
          "200" : {
            "description" : "Details on all voicemessages on endpoint",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Voicemessage"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints/{number}/voicemessages/{id}" : {
      "get" : {
        "summary" : "Get voicemessages on given endpoint",
        "description" : "Get voicemessages on given endpoint",
        "produces" : [ "file" ],
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Endpoint number for which shortcodes apply. Number is provided in MSISDN format (without starting \"+\" sign).",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "internal ID of single voicemessage",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "voicemail" ],
        "responses" : {
          "200" : {
            "description" : "wav file of single voicemessage",
            "schema" : {
              "type" : "file"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resellers" : {
      "get" : {
        "summary" : "List of all resellers",
        "description" : "Returning list of all resellers in the system",
        "tags" : [ "resellers" ],
        "responses" : {
          "200" : {
            "description" : "JSON array of resellers information",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Reseller"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Insert new reseller",
        "description" : "Adding new reseller into system",
        "tags" : [ "resellers" ],
        "parameters" : [ {
          "name" : "reseller",
          "in" : "body",
          "description" : "Resller information to be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsertReseller"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Reseller successfuly added to system",
            "schema" : {
              "$ref" : "#/definitions/Reseller"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/resellers/{external_id}" : {
      "get" : {
        "summary" : "Get information about single reseller based",
        "description" : "Get information about single reseller based on his external ID. This method will be mostly triggered by XOMS system that contains reseller external ID.",
        "tags" : [ "resellers" ],
        "parameters" : [ {
          "name" : "external_id",
          "in" : "path",
          "description" : "External id is ID of reseller in XOMS system",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Single reseller response",
            "schema" : {
              "$ref" : "#/definitions/Reseller"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update single reseller",
        "description" : "Updating single reseller information",
        "tags" : [ "resellers" ],
        "parameters" : [ {
          "name" : "external_id",
          "in" : "path",
          "description" : "External id is ID of reseller in XOMS system",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reseller",
          "in" : "body",
          "description" : "Resseler information that will be updated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InsertReseller"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated single reseller",
            "schema" : {
              "$ref" : "#/definitions/Reseller"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "resellers" ],
        "summary" : "Delete single reseller",
        "description" : "Delete single reseller. Warning - this will not delete any endpoint associated to this reseller. As result, when those endpoints dial 1200 - nothing will happen",
        "parameters" : [ {
          "name" : "external_id",
          "in" : "path",
          "description" : "External id is ID of reseller in XOMS system",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Reseller deleted from the system"
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints" : {
      "get" : {
        "summary" : "List all endpionts on system",
        "tags" : [ "endpoints" ],
        "description" : "Returns all endpoints from the system",
        "responses" : {
          "200" : {
            "description" : "JSON array of endpoint information",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Endpoint"
              }
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates new endpoint",
        "tags" : [ "endpoints" ],
        "description" : "Creates a new endpoint",
        "parameters" : [ {
          "name" : "endpoint",
          "in" : "body",
          "description" : "Endpoint information that will be added",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Endpoint"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of added endpoint",
            "schema" : {
              "$ref" : "#/definitions/Endpoint"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoints/{number}" : {
      "get" : {
        "summary" : "Return single endpoint",
        "tags" : [ "endpoints" ],
        "description" : "Returns a endpoint based on a phone number",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Phone number of single endpoint. Phone number is provided without \"+\" prefix",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Details of single endpoint",
            "schema" : {
              "$ref" : "#/definitions/Endpoint"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Delete single endpoint",
        "tags" : [ "endpoints" ],
        "description" : "Delete a single endpoint based on the phone number",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Phone number of single endpoint. Phone number is provided without \"+\" prefix",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Endpoint deleted"
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update single endpoint",
        "tags" : [ "endpoints" ],
        "description" : "Updates a single endpoint based on the phone number",
        "parameters" : [ {
          "name" : "number",
          "in" : "path",
          "description" : "Phone number of single endpoint. Phone number is provided without \"+\" prefix",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endpoint",
          "in" : "body",
          "description" : "Endpoint information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Endpoint"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "endpoint response",
            "schema" : {
              "$ref" : "#/definitions/Endpoint"
            }
          },
          "default" : {
            "description" : "unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cdrs" : {
      "get" : {
        "summary" : "List all CDRs in the system",
        "description" : "Returning CDRs in the system. Default limit is 1000 CDRs.",
        "tags" : [ "CDR" ],
        "parameters" : [ {
          "name" : "start",
          "type" : "string",
          "description" : "Filter all cdrs that are newer (or equal) to start datetime. Provide value in 'yyyyMMddHHmmss' fromat - that is year,month,day,hour (24h format),minute,second. For example 20151023141823 - this is 23. octboer 2015. 14:18:23",
          "in" : "query",
          "required" : false
        }, {
          "name" : "end",
          "type" : "string",
          "description" : "Filter all cdrs that are older (or equal) to end datetime. Provide value in 'yyyyMMddHHmmss' fromat - that is year,month,day,hour (24h format),minute,second. For example 20151023141823 - this is 23. octboer 2015. 14:18:23",
          "in" : "query",
          "required" : false
        }, {
          "name" : "limit",
          "type" : "integer",
          "description" : "number of CDRs to be retreived. Default is 1000.",
          "in" : "query",
          "required" : false
        }, {
          "name" : "source",
          "required" : false,
          "in" : "query",
          "description" : "Phone number of source (include \"+\" phone prefix)",
          "type" : "string"
        }, {
          "name" : "destination",
          "in" : "query",
          "required" : false,
          "description" : "Phone number of destination (include \"+\" phone prefix)",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Array of retreived CDRs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CDR"
              }
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "Reseller" : {
      "type" : "object",
      "required" : [ "ID", "external_ID", "phone_number" ],
      "properties" : {
        "ID" : {
          "type" : "string"
        },
        "external_ID" : {
          "type" : "string",
          "description" : "ID of reseller in XOMS system"
        },
        "phone_number" : {
          "type" : "string"
        }
      }
    },
    "InsertReseller" : {
      "type" : "object",
      "required" : [ "external_ID", "phone_number" ],
      "properties" : {
        "external_ID" : {
          "type" : "string",
          "description" : "ID of reseller in XOMS system"
        },
        "phone_number" : {
          "type" : "string"
        }
      }
    },
    "Endpoint" : {
      "type" : "object",
      "required" : [ "number" ],
      "properties" : {
        "number" : {
          "type" : "string",
          "description" : "Phone number that is provisioned on TING (including \"+\" prefix)"
        },
        "password" : {
          "type" : "string",
          "description" : "password of single endpoint"
        },
        "destination_timeout" : {
          "type" : "string",
          "description" : "destination after timeout (function goto ...)"
        },
        "destination_timeout_params" : {
          "type" : "string",
          "description" : "parameters for destination after timeout"
        },
        "destination_busy" : {
          "type" : "string",
          "description" : "destination if endpoint is busy (function goto ...)"
        },
        "destination_busy_params" : {
          "type" : "string",
          "description" : "parameters for destination if endpoint is busy"
        },
        "destination_unavail" : {
          "type" : "string",
          "description" : "destination if endpoint is unavailable (function goto ...)"
        },
        "destination_unavail_params" : {
          "type" : "string",
          "description" : "parameters if endpoint is unavailable"
        }
      }
    },
    "Voicemail" : {
      "type" : "object",
      "required" : [ "id", "pincode", "endpoint" ],
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "pincode" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        }
      }
    },
    "InsertVoicemail" : {
      "type" : "object",
      "required" : [ "pincode", "endpoint" ],
      "properties" : {
        "pincode" : {
          "type" : "string"
        },
        "endpoint" : {
          "type" : "string"
        }
      }
    },
    "ShortCode" : {
      "type" : "object",
      "required" : [ "id", "callernumber", "shortcode", "destinationnumber" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "callernumber" : {
          "type" : "string"
        },
        "shortcode" : {
          "type" : "string"
        },
        "destinationnumber" : {
          "type" : "string"
        }
      }
    },
    "InsertShortCode" : {
      "type" : "object",
      "required" : [ "callernumber", "shortcode", "destinationnumber" ],
      "properties" : {
        "callernumber" : {
          "type" : "string"
        },
        "shortcode" : {
          "type" : "string"
        },
        "destinationnumber" : {
          "type" : "string"
        }
      }
    },
    "Voicemessage" : {
      "type" : "object",
      "required" : [ "id", "timestamp", "callerid", "duration" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string",
          "description" : "unix (epoch) timestamp format"
        },
        "msisdn" : {
          "type" : "string",
          "description" : "Phone number (MSISDN) of mailbox owner"
        },
        "callerid" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "integer",
          "description" : "Duration of voicemessage in seconds"
        }
      }
    },
    "VoiceMessageAudio" : {
      "type" : "object",
      "required" : [ "audio" ],
      "properties" : {
        "audio" : {
          "type" : "string",
          "description" : "Base64 endcoded blob (wav file) from database in string representation."
        }
      }
    },
    "VoiceMessageUpdate" : {
      "description" : "used for updating voicemessage email sending status",
      "type" : "object",
      "required" : [ "id", "sent" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "sent" : {
          "type" : "integer",
          "description" : "sent=1 email is sent<br/>sent=0 email is not sent"
        }
      }
    },
    "CUG" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "ID of the CUG"
        },
        "name" : {
          "type" : "string",
          "description" : "Custom name of the CUG"
        },
        "reseller" : {
          "type" : "string",
          "description" : "reseller username from XOMS"
        },
        "contract_id" : {
          "type" : "string",
          "description" : "contract ID field from XOMS"
        }
      }
    },
    "CUGMember" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "description" : "Internal ID of group member"
        },
        "group_id" : {
          "type" : "integer",
          "description" : "ID of the group where number belongs to"
        },
        "number" : {
          "type" : "string",
          "description" : "Phone number - member of the group"
        }
      }
    },
    "CDR" : {
      "type" : "object",
      "properties" : {
        "calldate" : {
          "type" : "string",
          "description" : "date/time of the call"
        },
        "called_id" : {
          "type" : "string",
          "description" : "caller ID"
        },
        "src" : {
          "type" : "string",
          "description" : "source number"
        },
        "dst" : {
          "type" : "string",
          "description" : "destination number"
        },
        "dcontext" : {
          "type" : "string",
          "description" : "Last executed dialplan context"
        },
        "channel" : {
          "type" : "string",
          "description" : "PJSIP channel identification"
        },
        "dstchannel" : {
          "type" : "string",
          "description" : "Destination PJSIP channel identification"
        },
        "lastapp" : {
          "type" : "string",
          "description" : "Name of the last internal application that is used"
        },
        "lastdata" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "string",
          "description" : "duration of call"
        },
        "billsec" : {
          "type" : "string",
          "description" : "billable seconds"
        },
        "disposition" : {
          "type" : "string",
          "description" : "status of the call (ANSWERED, NO ANSWER, FAILED)"
        },
        "amaflags" : {
          "type" : "string"
        },
        "uniqueid" : {
          "type" : "string"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    }
  }
}